{"ast":null,"code":"import React, { forwardRef, useRef, useMemo, useState, useImperativeHandle, useEffect } from 'react';\nimport Chart$1 from 'chart.js/auto';\nimport merge from 'lodash/merge';\nimport assign from 'lodash/assign';\nimport find from 'lodash/find';\nimport { defaults as defaults$1, Chart as Chart$2 } from 'chart.js';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar ChartComponent = forwardRef(function (props, ref) {\n  var id = props.id,\n      className = props.className,\n      _props$height = props.height,\n      height = _props$height === void 0 ? 150 : _props$height,\n      _props$width = props.width,\n      width = _props$width === void 0 ? 300 : _props$width,\n      _props$redraw = props.redraw,\n      redraw = _props$redraw === void 0 ? false : _props$redraw,\n      type = props.type,\n      data = props.data,\n      _props$options = props.options,\n      options = _props$options === void 0 ? {} : _props$options,\n      _props$plugins = props.plugins,\n      plugins = _props$plugins === void 0 ? [] : _props$plugins,\n      getDatasetAtEvent = props.getDatasetAtEvent,\n      getElementAtEvent = props.getElementAtEvent,\n      getElementsAtEvent = props.getElementsAtEvent,\n      fallbackContent = props.fallbackContent,\n      rest = _objectWithoutPropertiesLoose(props, [\"id\", \"className\", \"height\", \"width\", \"redraw\", \"type\", \"data\", \"options\", \"plugins\", \"getDatasetAtEvent\", \"getElementAtEvent\", \"getElementsAtEvent\", \"fallbackContent\"]);\n\n  var canvas = useRef(null);\n  var computedData = useMemo(function () {\n    if (typeof data === 'function') {\n      return canvas.current ? data(canvas.current) : {};\n    } else return merge({}, data);\n  }, [data, canvas.current]);\n\n  var _useState = useState(),\n      chart = _useState[0],\n      setChart = _useState[1];\n\n  useImperativeHandle(ref, function () {\n    return chart;\n  }, [chart]);\n\n  var renderChart = function renderChart() {\n    if (!canvas.current) return;\n    setChart(new Chart$1(canvas.current, {\n      type: type,\n      data: computedData,\n      options: options,\n      plugins: plugins\n    }));\n  };\n\n  var onClick = function onClick(e) {\n    if (!chart) return;\n    getDatasetAtEvent && getDatasetAtEvent(chart.getElementsAtEventForMode(e, 'dataset', {\n      intersect: true\n    }, false), e);\n    getElementAtEvent && getElementAtEvent(chart.getElementsAtEventForMode(e, 'nearest', {\n      intersect: true\n    }, false), e);\n    getElementsAtEvent && getElementsAtEvent(chart.getElementsAtEventForMode(e, 'index', {\n      intersect: true\n    }, false), e);\n  };\n\n  var updateChart = function updateChart() {\n    if (!chart) return;\n\n    if (options) {\n      chart.options = _extends({}, options);\n    }\n\n    if (!chart.config.data) {\n      chart.config.data = computedData;\n      chart.update();\n      return;\n    }\n\n    var _computedData$dataset = computedData.datasets,\n        newDataSets = _computedData$dataset === void 0 ? [] : _computedData$dataset,\n        newChartData = _objectWithoutPropertiesLoose(computedData, [\"datasets\"]);\n\n    var _chart$config$data$da = chart.config.data.datasets,\n        currentDataSets = _chart$config$data$da === void 0 ? [] : _chart$config$data$da;\n    assign(chart.config.data, newChartData);\n    chart.config.data.datasets = newDataSets.map(function (newDataSet) {\n      var currentDataSet = find(currentDataSets, function (d) {\n        return d.label === newDataSet.label && d.type === newDataSet.type;\n      });\n      if (!currentDataSet || !newDataSet.data) return newDataSet;\n\n      if (!currentDataSet.data) {\n        currentDataSet.data = [];\n      } else {\n        currentDataSet.data.length = newDataSet.data.length;\n      }\n\n      assign(currentDataSet.data, newDataSet.data);\n      return _extends({}, currentDataSet, newDataSet, {\n        data: currentDataSet.data\n      });\n    });\n    chart.update();\n  };\n\n  var destroyChart = function destroyChart() {\n    if (chart) chart.destroy();\n  };\n\n  useEffect(function () {\n    renderChart();\n    return function () {\n      return destroyChart();\n    };\n  }, []);\n  useEffect(function () {\n    if (redraw) {\n      destroyChart();\n      setTimeout(function () {\n        renderChart();\n      }, 0);\n    } else {\n      updateChart();\n    }\n  }, [props, computedData]);\n  return React.createElement(\"canvas\", Object.assign({}, rest, {\n    height: height,\n    width: width,\n    ref: canvas,\n    id: id,\n    className: className,\n    onClick: onClick,\n    \"data-testid\": 'canvas',\n    role: 'img'\n  }), fallbackContent);\n});\nvar Line = forwardRef(function (props, ref) {\n  return React.createElement(ChartComponent, Object.assign({}, props, {\n    type: 'line',\n    ref: ref,\n    options: props.options || {}\n  }));\n});\nvar Bar = forwardRef(function (props, ref) {\n  return React.createElement(ChartComponent, Object.assign({}, props, {\n    type: 'bar',\n    ref: ref,\n    options: props.options || {}\n  }));\n});\nvar Radar = forwardRef(function (props, ref) {\n  return React.createElement(ChartComponent, Object.assign({}, props, {\n    type: 'radar',\n    ref: ref,\n    options: props.options || {}\n  }));\n});\nvar Doughnut = forwardRef(function (props, ref) {\n  return React.createElement(ChartComponent, Object.assign({}, props, {\n    type: 'doughnut',\n    ref: ref,\n    options: props.options || {}\n  }));\n});\nvar PolarArea = forwardRef(function (props, ref) {\n  return React.createElement(ChartComponent, Object.assign({}, props, {\n    type: 'polarArea',\n    ref: ref,\n    options: props.options || {}\n  }));\n});\nvar Bubble = forwardRef(function (props, ref) {\n  return React.createElement(ChartComponent, Object.assign({}, props, {\n    type: 'bubble',\n    ref: ref,\n    options: props.options || {}\n  }));\n});\nvar Pie = forwardRef(function (props, ref) {\n  return React.createElement(ChartComponent, Object.assign({}, props, {\n    type: 'pie',\n    ref: ref,\n    options: props.options || {}\n  }));\n});\nvar Scatter = forwardRef(function (props, ref) {\n  return React.createElement(ChartComponent, Object.assign({}, props, {\n    type: 'scatter',\n    ref: ref,\n    options: props.options || {}\n  }));\n});\nvar defaults = defaults$1;\nvar Chart = Chart$2;\nexport default ChartComponent;\nexport { Bar, Bubble, Chart, Doughnut, Line, Pie, PolarArea, Radar, Scatter, defaults };","map":{"version":3,"sources":["../src/chart.tsx","../src/index.tsx"],"names":["ChartComponent","forwardRef","id","className","height","width","redraw","type","data","options","plugins","getDatasetAtEvent","getElementAtEvent","getElementsAtEvent","fallbackContent","rest","props","canvas","useRef","computedData","useMemo","merge","chart","setChart","useState","useImperativeHandle","renderChart","onClick","intersect","updateChart","datasets","newDataSets","newChartData","currentDataSets","assign","currentDataSet","find","d","newDataSet","destroyChart","useEffect","setTimeout","ref","role","Line","Bar","Radar","Doughnut","PolarArea","Bubble","Pie","Scatter","defaults","chartjs","Chart"],"mappings":"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","sourcesContent":["import React, {\n  useEffect,\n  useState,\n  useRef,\n  useImperativeHandle,\n  useMemo,\n  forwardRef,\n} from 'react';\n// eslint-disable-next-line no-unused-vars\nimport { Props } from './types';\n\nimport Chart from 'chart.js/auto';\n\nimport merge from 'lodash/merge';\nimport assign from 'lodash/assign';\nimport find from 'lodash/find';\n\nconst ChartComponent = forwardRef<Chart | undefined, Props>((props, ref) => {\n  const {\n    id,\n    className,\n    height = 150,\n    width = 300,\n    redraw = false,\n    type,\n    data,\n    options = {},\n    plugins = [],\n    getDatasetAtEvent,\n    getElementAtEvent,\n    getElementsAtEvent,\n    fallbackContent,\n    ...rest\n  } = props;\n\n  const canvas = useRef<HTMLCanvasElement>(null);\n\n  const computedData = useMemo<Chart.ChartData>(() => {\n    if (typeof data === 'function') {\n      return canvas.current ? data(canvas.current) : {};\n    } else return merge({}, data);\n  }, [data, canvas.current]);\n\n  const [chart, setChart] = useState<Chart>();\n\n  useImperativeHandle<Chart | undefined, Chart | undefined>(ref, () => chart, [\n    chart,\n  ]);\n\n  const renderChart = () => {\n    if (!canvas.current) return;\n\n    setChart(\n      new Chart(canvas.current, {\n        type,\n        data: computedData,\n        options,\n        plugins,\n      })\n    );\n  };\n\n  const onClick = (e: React.MouseEvent<HTMLCanvasElement>) => {\n    if (!chart) return;\n\n    getDatasetAtEvent &&\n      getDatasetAtEvent(\n        chart.getElementsAtEventForMode(\n          e,\n          'dataset',\n          { intersect: true },\n          false\n        ),\n        e\n      );\n    getElementAtEvent &&\n      getElementAtEvent(\n        chart.getElementsAtEventForMode(\n          e,\n          'nearest',\n          { intersect: true },\n          false\n        ),\n        e\n      );\n    getElementsAtEvent &&\n      getElementsAtEvent(\n        chart.getElementsAtEventForMode(e, 'index', { intersect: true }, false),\n        e\n      );\n  };\n\n  const updateChart = () => {\n    if (!chart) return;\n\n    if (options) {\n      chart.options = { ...options };\n    }\n\n    if (!chart.config.data) {\n      chart.config.data = computedData;\n      chart.update();\n      return;\n    }\n\n    const { datasets: newDataSets = [], ...newChartData } = computedData;\n    const { datasets: currentDataSets = [] } = chart.config.data;\n\n    // copy values\n    assign(chart.config.data, newChartData);\n    chart.config.data.datasets = newDataSets.map((newDataSet: any) => {\n      // given the new set, find it's current match\n      const currentDataSet = find(\n        currentDataSets,\n        d => d.label === newDataSet.label && d.type === newDataSet.type\n      );\n\n      // There is no original to update, so simply add new one\n      if (!currentDataSet || !newDataSet.data) return newDataSet;\n\n      if (!currentDataSet.data) {\n        currentDataSet.data = [];\n      } else {\n        currentDataSet.data.length = newDataSet.data.length;\n      }\n\n      // copy in values\n      assign(currentDataSet.data, newDataSet.data);\n\n      // apply dataset changes, but keep copied data\n      return {\n        ...currentDataSet,\n        ...newDataSet,\n        data: currentDataSet.data,\n      };\n    });\n\n    chart.update();\n  };\n\n  const destroyChart = () => {\n    if (chart) chart.destroy();\n  };\n\n  useEffect(() => {\n    renderChart();\n\n    return () => destroyChart();\n  }, []);\n\n  useEffect(() => {\n    if (redraw) {\n      destroyChart();\n      setTimeout(() => {\n        renderChart();\n      }, 0);\n    } else {\n      updateChart();\n    }\n  }, [props, computedData]);\n\n  return (\n    <canvas\n      {...rest}\n      height={height}\n      width={width}\n      ref={canvas}\n      id={id}\n      className={className}\n      onClick={onClick}\n      data-testid='canvas'\n      role='img'\n    >\n      {fallbackContent}\n    </canvas>\n  );\n});\n\nexport default ChartComponent;\n","import React, { forwardRef } from 'react';\n// eslint-disable-next-line no-unused-vars\nimport { Props } from './types';\nimport ChartComponent from './chart';\n// eslint-disable-next-line no-unused-vars\nimport Chart from 'chart.js/auto';\nimport * as chartjs from 'chart.js';\n\nexport const Line = forwardRef<Chart | undefined, Props>((props, ref) => (\n  <ChartComponent\n    {...props}\n    type='line'\n    ref={ref}\n    options={props.options || {}}\n  />\n));\n\nexport const Bar = forwardRef<Chart | undefined, Props>((props, ref) => (\n  <ChartComponent\n    {...props}\n    type='bar'\n    ref={ref}\n    options={props.options || {}}\n  />\n));\n\nexport const Radar = forwardRef<Chart | undefined, Props>((props, ref) => (\n  <ChartComponent\n    {...props}\n    type='radar'\n    ref={ref}\n    options={props.options || {}}\n  />\n));\n\nexport const Doughnut = forwardRef<Chart | undefined, Props>((props, ref) => (\n  <ChartComponent\n    {...props}\n    type='doughnut'\n    ref={ref}\n    options={props.options || {}}\n  />\n));\n\nexport const PolarArea = forwardRef<Chart | undefined, Props>((props, ref) => (\n  <ChartComponent\n    {...props}\n    type='polarArea'\n    ref={ref}\n    options={props.options || {}}\n  />\n));\n\nexport const Bubble = forwardRef<Chart | undefined, Props>((props, ref) => (\n  <ChartComponent\n    {...props}\n    type='bubble'\n    ref={ref}\n    options={props.options || {}}\n  />\n));\n\nexport const Pie = forwardRef<Chart | undefined, Props>((props, ref) => (\n  <ChartComponent\n    {...props}\n    type='pie'\n    ref={ref}\n    options={props.options || {}}\n  />\n));\n\nexport const Scatter = forwardRef<Chart | undefined, Props>((props, ref) => (\n  <ChartComponent\n    {...props}\n    type='scatter'\n    ref={ref}\n    options={props.options || {}}\n  />\n));\n\nexport const defaults = chartjs.defaults;\n\nexport const Chart = chartjs.Chart;\n\nexport default ChartComponent;\n"]},"metadata":{},"sourceType":"module"}